let AA;_61c‍.w("./sankey_webpack.js",[["default",["AA"],function(v){AA=v}]]);

var A = mappedToArray1;
var B = mappedToArray2;

_61c‍.g.console.log(A)
_61c‍.g.console.log(B)

    // ip functions
    function ip2num(ip) {
        var d = ip.split('.');
        return ((((((+d[0]) * 256) + (+d[1])) * 256) + (+d[2])) * 256) + (+d[3]);
    }

    function num2ip(num) {
        var d = num % 256;
        for (var i = 3; i > 0; i--) {
            num = Math.floor(num / 256);
            d = num % 256 + '.' + d;
        }
        return d;
    }

$( document ).ready(function() {

$('#container').bind('mousemove', function(e) {
    var chart = $(this).highcharts();
    var position;

    e = chart.pointer.normalize(e);
        position = chart.fromPointToLocatLon
    $('#x-value').text(function(){
    		return	num2ip (chart.xAxis[0].toValue(e.chartX).toFixed(0))}),
    $('#y-value').text(function(){
    		return	num2ip (chart.yAxis[0].toValue(e.chartY).toFixed(0))});
  });


});




Highcharts.chart('container', {

  chart: {
    type: 'heatmap',
    zoomType: 'xy',
    marginTop: 40,
    marginBottom: 80,

    // plotBorderWidth: 1
  },


  title: {
    text: 'Anomalies Between The Rules'
  },

  xAxis: {
  title:{
                    "text": "SIP"
                },
  crosshair: {
                zIndex: 5,
                dashStyle: 'dot',
                snap: false,
                color: 'gray'
            },
  labels: {
                formatter: function () {
                return num2ip(this.value);
                    }
                },
								endOnTick: false ,

  },

  yAxis: {
  crosshair: {
                zIndex: 5,
                dashStyle: 'dot',
                snap: false,
                color: 'gray'
            },

      labels: {
                formatter: function () {
                return num2ip(this.value);
                    },
                    },
      title:{
                    "text": "DIP"
                },
			endOnTick: false ,
    //reversed: true
  },
  /*
      accessibility: {
          point: {
              descriptionFormatter: function (point) {
                  var ix = point.index + 1,
                      xName = getPointCategoryName(point, 'x'),
                      yName = getPointCategoryName(point, 'y'),
                      val = point.value;
                  return ix + '. ' + xName + ' sales ' + yName + ', ' + val + '.';
              }
          }
      },
  */

  /*
      legend: {
          align: 'right',
          layout: 'vertical',
          margin: 0,
          verticalAlign: 'top',
          y: 50,
          symbolHeight: 280
      },
  */


  tooltip: {
    enabled: false
    /*
           formatter: function () {
               return '<b>' + this.point.x+ ' </b>,<b>' +	this.point.y
                    + '</b><br><b>' + this.point.name + '</b>';


           },

           positioner: function () {
               return { x: 80, y: 0 };
           },
           shadow: false,
           borderWidth: 0,
           backgroundColor: 'transparent'
      */
  },



  series: [{

      name: 'R0',
      data: A,
      type: 'arearange',
      lineWidth: 0,
      color: '#8afb79',
      linkedTo: ':previous',
      fillOpacity: 0.5,
      zIndex: 0,
      marker: {
        enabled: false
      },
    }, {
      name: 'R1',
      data: B,
      type: 'arearange',
      lineWidth: 0,
      color: '#C48888',
      linkedTo: ':previous',
      fillOpacity: 0.5,
      zIndex: 0,
      marker: {
        enabled: false
      },
    },


  ],

});
