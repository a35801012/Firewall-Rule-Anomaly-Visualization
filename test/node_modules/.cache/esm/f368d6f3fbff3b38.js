/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./heatmap.js":
/*!********************!*\
  !*** ./heatmap.js ***!
  \********************/
/***/ (() => {

eval(_fbf‍.c("var A = mappedToArray1;\nvar B = mappedToArray2;\nconsole.log(A);\nconsole.log(B); // ip functions\n\nfunction ip2num(ip) {\n  var d = ip.split('.');\n  return ((+d[0] * 256 + +d[1]) * 256 + +d[2]) * 256 + +d[3];\n}\n\nfunction num2ip(num) {\n  var d = num % 256;\n\n  for (var i = 3; i > 0; i--) {\n    num = Math.floor(num / 256);\n    d = num % 256 + '.' + d;\n  }\n\n  return d;\n}\n\n$(document).ready(function () {\n  $('#container').bind('mousemove', function (e) {\n    var chart = $(this).highcharts();\n    var position;\n    e = chart.pointer.normalize(e);\n    position = chart.fromPointToLocatLon;\n    $('#x-value').text(function () {\n      return num2ip(chart.xAxis[0].toValue(e.chartX).toFixed(0));\n    }), $('#y-value').text(function () {\n      return num2ip(chart.yAxis[0].toValue(e.chartY).toFixed(0));\n    });\n  });\n});\nHighcharts.chart('container', {\n  chart: {\n    type: 'heatmap',\n    zoomType: 'xy',\n    marginTop: 40,\n    marginBottom: 80 // plotBorderWidth: 1\n\n  },\n  title: {\n    text: 'Anomalies Between The Rules'\n  },\n  xAxis: {\n    title: {\n      \"text\": \"SIP\"\n    },\n    crosshair: {\n      zIndex: 5,\n      dashStyle: 'dot',\n      snap: false,\n      color: 'gray'\n    },\n    labels: {\n      formatter: function formatter() {\n        return num2ip(this.value);\n      }\n    },\n    endOnTick: false\n  },\n  yAxis: {\n    crosshair: {\n      zIndex: 5,\n      dashStyle: 'dot',\n      snap: false,\n      color: 'gray'\n    },\n    labels: {\n      formatter: function formatter() {\n        return num2ip(this.value);\n      }\n    },\n    title: {\n      \"text\": \"DIP\"\n    },\n    endOnTick: false //reversed: true\n\n  },\n\n  /*\r\n      accessibility: {\r\n          point: {\r\n              descriptionFormatter: function (point) {\r\n                  var ix = point.index + 1,\r\n                      xName = getPointCategoryName(point, 'x'),\r\n                      yName = getPointCategoryName(point, 'y'),\r\n                      val = point.value;\r\n                  return ix + '. ' + xName + ' sales ' + yName + ', ' + val + '.';\r\n              }\r\n          }\r\n      },\r\n  */\n\n  /*\r\n      legend: {\r\n          align: 'right',\r\n          layout: 'vertical',\r\n          margin: 0,\r\n          verticalAlign: 'top',\r\n          y: 50,\r\n          symbolHeight: 280\r\n      },\r\n  */\n  tooltip: {\n    enabled: false\n    /*\r\n           formatter: function () {\r\n               return '<b>' + this.point.x+ ' </b>,<b>' +\tthis.point.y\r\n                    + '</b><br><b>' + this.point.name + '</b>';\r\n               },\r\n             positioner: function () {\r\n               return { x: 80, y: 0 };\r\n           },\r\n           shadow: false,\r\n           borderWidth: 0,\r\n           backgroundColor: 'transparent'\r\n      */\n\n  },\n  series: [{\n    name: 'R0',\n    data: A,\n    type: 'arearange',\n    lineWidth: 0,\n    color: '#8afb79',\n    linkedTo: ':previous',\n    fillOpacity: 0.5,\n    zIndex: 0,\n    marker: {\n      enabled: false\n    }\n  }, {\n    name: 'R1',\n    data: B,\n    type: 'arearange',\n    lineWidth: 0,\n    color: '#C48888',\n    linkedTo: ':previous',\n    fillOpacity: 0.5,\n    zIndex: 0,\n    marker: {\n      enabled: false\n    }\n  }]\n});\n\n//# sourceURL=webpack://test/./heatmap.js?"));

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./heatmap.js"]();
/******/ 	
/******/ })()
;