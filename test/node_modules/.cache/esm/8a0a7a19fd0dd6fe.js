/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./sankey.js":
/*!*******************!*\
  !*** ./sankey.js ***!
  \*******************/
/***/ ((module) => {

eval(_fd0‚Äç.c("google.charts.load(\"current\", {\n  packages: [\"sankey\"]\n});\ngoogle.charts.setOnLoadCallback(drawChart);\n\nfunction drawChart() {\n  $.get(\"123.csv\", function (csvString) {\n    // fetch CSV file using ajax\n    var arrayData = $.csv.toArrays(csvString, {\n      onParseValue: $.csv.hooks.castToScalar\n    }); // after parsing , arrayData is 2-D array holding all the data contained in CSV file\n\n    var data = new google.visualization.DataTable();\n    data.addColumn('string', 'From');\n    data.addColumn('string', 'To');\n    data.addColumn('number', 'Weight');\n    data.addColumn({\n      type: 'string',\n      role: 'style'\n    });\n    data.addColumn({\n      type: 'string',\n      role: 'tooltip'\n    });\n    data.addColumn({\n      type: 'number',\n      label: 'X1axis1',\n      role: 'data'\n    });\n    data.addColumn({\n      type: 'number',\n      label: 'Y1axis_Max1',\n      role: 'data'\n    });\n    data.addColumn({\n      type: 'number',\n      label: 'Y1axis_min1',\n      role: 'data'\n    });\n    data.addColumn({\n      type: 'number',\n      label: 'X1axis2',\n      role: 'data'\n    });\n    data.addColumn({\n      type: 'number',\n      label: 'Y1axis_Max2',\n      role: 'data'\n    });\n    data.addColumn({\n      type: 'number',\n      label: 'Y1axis_min2',\n      role: 'data'\n    });\n    data.addColumn({\n      type: 'number',\n      label: 'X2axis1',\n      role: 'data'\n    });\n    data.addColumn({\n      type: 'number',\n      label: 'Y2axis_Max1',\n      role: 'data'\n    });\n    data.addColumn({\n      type: 'number',\n      label: 'Y2axis_min1',\n      role: 'data'\n    });\n    data.addColumn({\n      type: 'number',\n      label: 'X2axis2',\n      role: 'data'\n    });\n    data.addColumn({\n      type: 'number',\n      label: 'Y2axis_Max2',\n      role: 'data'\n    });\n    data.addColumn({\n      type: 'number',\n      label: 'Y2axis_min2',\n      role: 'data'\n    });\n    data.addRows(arrayData); // Sets chart options.\n\n    var options = {\n      width: 600,\n      tooltip: {\n        isHtml: true\n      },\n      sankey: {\n        link: {\n          color: {\n            stroke: 'black',\n            strokeWidth: 0\n          },\n          interactivity: true\n        },\n        node: {\n          //interactivity: true,\n          width: 10,\n          labelPadding: 5,\n          label: {\n            fontName: 'Times-Roman',\n            fontSize: 14,\n            color: '#871b47',\n            bold: true,\n            italic: true\n          }\n        }\n      }\n    }; // Instantiate and draw our chart, passing in some options.\n\n    var chart = new google.visualization.Sankey(document.getElementById('sankey_multiple'));\n    chart.draw(data, options);\n\n    function selectHandler() {\n      var selections = chart.getSelection();\n\n      if (selections.length == 0) {\n        alert('Nothing selected');\n      } else {\n        var selection = selections[0];\n        var block1 = [{\n          Xaxis: data.getValue(selection.row, 5),\n          Yaxis_Max: data.getValue(selection.row, 6),\n          Yaxis_min: data.getValue(selection.row, 7)\n        }, {\n          Xaxis: data.getValue(selection.row, 8),\n          Yaxis_Max: data.getValue(selection.row, 9),\n          Yaxis_min: data.getValue(selection.row, 10)\n        }];\n        var mappedToArray1 = block1.map(function (d) {\n          return Array.from(Object.values(d));\n        });\n        var block2 = [{\n          Xaxis: data.getValue(selection.row, 11),\n          Yaxis_Max: data.getValue(selection.row, 12),\n          Yaxis_min: data.getValue(selection.row, 13)\n        }, {\n          Xaxis: data.getValue(selection.row, 14),\n          Yaxis_Max: data.getValue(selection.row, 15),\n          Yaxis_min: data.getValue(selection.row, 16)\n        }];\n        var mappedToArray2 = block2.map(function (d) {\n          return Array.from(Object.values(d));\n        });\n        module.exports = {\n          mappedToArray1: mappedToArray1,\n          mappedToArray2: mappedToArray2\n        };\n      }\n    }\n\n    google.visualization.events.addListener(chart, 'select', selectHandler);\n    google.visualization.events.addListener(chart, 'select', function () {\n      var sel = chart.getSelection();\n      var jsFrame = new JSFrame();\n      var frame = jsFrame.create({\n        title: 'Window',\n        appearanceName: 'redstone',\n        style: {\n          overflow: 'auto',\n          width: '100%'\n        },\n        left: 500,\n        top: 20,\n        width: 720,\n        height: 720,\n        movable: true,\n        //Enable to be moved by mouse,\n        resizable: true,\n        //Enable to be resized by mouse\n        url: 'gui3.html'\n      }); //var selection = chart.getSelection();\n\n      if (sel) {\n        //Show the window\n        frame.show(); //var value = data.getValue(selection.row, 0);\n        // alert('The user selected ' + (selection.row == null ? 'something' : data.getValue(selection.row, 0)) );\n      }\n    });\n  });\n}\n\n//# sourceURL=webpack://test/./sankey.js?"));

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./sankey.js");
/******/ 	
/******/ })()
;